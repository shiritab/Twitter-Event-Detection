---
---
openapi: 3.0.0
info:
  title: TED - Twitter Event Detection
  description: REST API for Event Detection system
  contact:
    email: guyglo@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/shorlaks/twitter_event_detection/1.0.0
  description: SwaggerHub API Auto Mocking

tags:
- name: admins
  description: Secured Admin-only calls
- name: events
  description: End points related to existing events
- name: tweets
  description: End points related to information about tweets
- name: authors
  description: End points related to information about authors
paths:
  /events/summary/{algorithm}:
    get:
      tags:
      - events
      summary: display a summary of events and related tweets
      parameters:
      - name: algorithm
        in: path
        description: name of the algorithm used to detect events
        required: true
        style: form
        explode: false
        schema:
          type: string
          example: sedtwik
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary'
        "204":
          description: No content.
        "404":
          description: Could not find the requested url.
  /events/search:
    get:
      tags:
      - events
      summary: given a full or partial query will return an event description and tweets
      parameters:
      - name: event_query
        in: query
        description: name of event the user wants to inspect
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: presidential dabate
      - name: authors
        in: query
        description: indicates whether to return all authors related to event.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "204":
          description: No content.
        "404":
          description: Could not find the requested url.
  /events/statistics:
    get:
      tags:
      - events
      summary: Return accuracy measures for a given algorithem on a specipic dataset
      parameters:
      - name: algorithem
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: SEDtwik
      - name: dataset
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: event2
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "204":
          description: could not retrieve information
  /events/{algorithm}/{date}:
    get:
      tags:
      - events
      summary: returns all events by date
      parameters:
      - name: algorithm
        in: path
        description: name of algorithm used
          required: true
          style: form
          explode: false
          schema:
            type: string
            example: sedtwik
      - name: date
        in: path
        description: date of event
        required: true
        style: form
        explode: false
        schema:
          type: string
          example: 2012-10-12
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/eventObject'
        "204":
          description: No content.
        "404":
          description: Could not find the requested url.
  /authors:
    get:
      tags:
      - authors
      summary: returns number of authors and info about them
      responses:
        "200":
          description: sucsess
          content:
            application/json:
              schema:
                type: integer
                example: 7
  /authors/{authorId}/connections:
    get:
      tags:
      - authors
      summary: returns all connections of a certain author
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorObject'
  /tweets:
    get:
      tags:
      - tweets
      summary: returns number of tweets and info about them
      description: as default return number of tweets, if a tweet Id is given, will return details of tweet from twitter.
      parameters:
      - name: tweet_id
        in: query
        description: id of tweet to return details of
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: "264563843"
      responses:
        "200":
          description: sucsess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "204":
          description: no tweets available or could not retrive info from Twitter
components:
  schemas:
    summary:
      type: object
      $ref: '#/components/schemas/eventObject'
#      properties:
#        event_name:
#          type: string
#          example: Bibi lose elections
#        event_description:
#          type: string
#          example: during the last elections Benjanim Netanyahu lost to Naftalie Bennet
#        tweets:
#          type: array
#          items:
#            $ref: '#/components/schemas/eventObject'

#    tweetObject:
#      type: object
#      properties:
#        Id:
#          type: string
#          example: 264563843

    eventObject:
      type: object
      properties:
        event:
          type: string
          example: hadassa has given birth
        tweets:
          type: array
          items:
            type: int
#             $ref: '#/components/schemas/tweetObject'
            example: 264563843
         dirty_text:
           type: array
           items:
             type: string
             example: "bibi lost the elections this time!"
         tweets_emotion:
           type: array
           items:
             type: double
             example: 0.75

    # authorObject:
    #   type: object
    #   properties:
    #     authorId:
    #       type: string
    #       example: realDonaldTrump
    #     number_of_tweets:
    #       type: integer
    #       example: 7

    inline_response_200:
      type: object
      properties:
        number_of_events:
          type: integer
          example: 376
        query_response:
          $ref: '#/components/schemas/eventObject'

    inline_response_200_1:
      type: object
      properties:
        presicion:
          type: number
          example: 0.78
        recall:
          type: number
          example: 0.89
        f1_score:
          type: number
          example: 0.7

    inline_response_200_2:
      type: object
      properties:
        number_of_tweets:
          type: integer
          example: 265
        tweet_info:
          $ref: '#/components/schemas/tweetObject'
